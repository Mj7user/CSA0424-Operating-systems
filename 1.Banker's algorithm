#include <stdio.h>
int main()
{
	int n, m, i, j, k;
	n = 4; // Number of processes
	m = 3; // Number of resources
	int alloc[5][3] = { { 1,0, 0}, // P0 // Allocation Matrix
						{ 6,1,2 }, // P1
						{ 2,1,1 }, // P2
						{ 0,0,2}}; // P3

	int max[5][3] = { // P0 // MAX Matrix
					{ 3, 2, 2}, // P1
					{ 6,1,3 }, // P2
					{ 3,1,4 }, // P3
					{ 4,2,2 } }; 

	int avail[3] = { 9,3,6}; // Available Resources

	int f[n], ans[n], ind = 0;
	for (k = 0; k < n; k++) {
		f[k] = 0;
	}
	int need[n][m];
	for (i = 0; i < n; i++) {
		for (j = 0; j < m; j++)
			need[i][j] = max[i][j] - alloc[i][j];
	}
	int y = 0;
	for (k = 0; k < 5; k++) {
		for (i = 0; i < n; i++) {
			if (f[i] == 0) {

				int flag = 0;
				for (j = 0; j < m; j++) {
					if (need[i][j] > avail[j]){
						flag = 1;
						break;
					}
				}

				if (flag == 0) {
					ans[ind++] = i;
